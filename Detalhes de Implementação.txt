PRIMEIRAMENTE,
TEMOS QUE A CRIPTOGRAFIA ACONTECE DA SEGUINTE MANEIRA:
1) UMA LETRA POSSUI 5 BITS;
2) O ARQUIVO DE ENTRADA (TABELA) ACABA POR POSSUIR [QUANTIDADE DE LETRAS * NÚMERO DE BITS] TIPOS DIFERENTES DE PALAVRAS, QUE TAMBÉM É A QUANTIDADE DE LINHAS;
3) A SENHA QUE SERÁ CRIPTOGRAFADA É TRANSFORMADA EM BINÁRIO;
4) A POSIÇÃO X DA SENHA CRIPTOGRAFADA EM BINÁRIO IRÁ CORRESPONDER A UMA POSIÇÃO (LINHA) DA TABELA DE ENTRADA;
5) SE O BIT DA POSIÇÃO X FOR TRUE (1), IRÁ SOMAR A UM RESULTADO SOMADO ANTERIORMENTE (SERÁ SOMADO A 0 SE NÃO POSSUIR SOMA ANTERIOR);
6) SE O BIT DA POSIÇÃO X FOR FALSE (0), NADA ACONTECERÁ.
7) DEPOIS DA SOMA, A CADA GRUPO DE 5 BITS, SERÁ CONVERTIDO PARA DECIMAL, E DESTE DECIMAL PARA UM CHAR CORRESPONDETE AO ALFABETO INFORMADO.

PARA DESCRIPTOGRAFAR POR BRUTE FORCE:
1) TEMOS QUE, BASEADO NA QUANTIDADE DE LINHAS DO ARQUIVO (N = QUANTIDADE DE LETRAS * NÚMERO DE BITS), TEREMOS 2^N - 1, COMBINAÇÕES DE SOMAS DIFERENTES DE TODAS AS SENHAS;
2) DEPOIS SERÁ REALIZADO A SOMA DE TODAS ESSAS COMBINAÇÕES, CONFORME ALGORITMO JÁ PENSADO (NÃO IMPLEMENTADO EM C ATÉ O MOMENTO);
3) NA REALIZAÇÃO DESSAS SOMAS, DEVE SER GUARDADO TODAS AS LINHAS QUE FORAM SOMADAS NESSE PROCESSO;
4) APÓS TODAS AS SOMAS TEREM SIDO REALIZADAS, VIRÁ O PROCESSO DE COMPARAÇÃO, ONDE OS RESULTADOS DAS SOMAS SÃO COMPARADOS COM O VALOR DA SENHA CRIPTOGRAFADA;
5) QUANDO A SOMA BATER COM O VALOR DA SENHA CRIPTOGRAFADA, A POSIÇÃO NO VETOR OU AS LINHAS QUE FORAM SOMADAS, DEVEM SER SALVAS EM OUTRO ESPAÇO;
6) DEPOIS DESSE PROCESSO, ESSE ESPAÇO ARMAZENADO PRA SOMA PODE SER LIBERADO (PARA 5 LETRAS SÃO 33.554.431 POSIÇÕES);
7) COM AS POSÍVEIS SUGESTÕES PARA SENHAS DESCRIPTOGRAFADAS EM MÃO DEVEMOS:
  7.1) FAZER UM NÚMERO BINÁRIO DE TAMANHO = 5 * QUANTIDADE DE LETRAS (TALVEZ UNSIGNED CHAR);
  7.2) TODOS OS BITS SERÃO IGUAL A 0, COM EXCEÇÃO DOS CORRESPONDENTES AS LINHAS, ESTES SERÃO IGUAIS À 1;
  7.3) APÓS ISSO, A CADA GRUPO DE 5 BITS, SERÁ TRANSFORMADO EM UM NÚMERO, E ESSE NÚMERO CORRESPONDERÁ A UM CARÁCTER EM UMA POSIÇÃO X NO ALFABETO.
  7.4) OS PROCESSOS 7.1, 7.2 E 7.3 DEVERÃO SER REALIZADOS ENQUANTO HOUVER POSSÍVEIS SENHAS (WHILE QUANTIDADE SOMAS IGUAIS A VALOR INSERIDO PELA SENHA);
  7.5) A CADA FINALIZAÇÃO DO PASSO 7.3, DEVERÁ SER IMPRESSO A SENHA CORRESPONDENTE A ESSE BINÁRIO.
8) LIBERAÇÃO DE TODA A MEMÓRIA.

ALGORITMO DAS SOMAS PARA BRUTE FORCE:

SUM_BRUTE_FORCE (TABLE) {

  WHILE (POS != MAXPOS) {
    V[POS] = SUM (V[K], T[I]);
    POS++;
    I++;
    IF (I == MAXLINE) {
      K++;
      I = LASTLINE (V[K]);
      IF (I == MAXLINE) {
        V[POS] = VALUE (FIRSTLINE (V[POS-1]));
        K = POS;
        POS++;
        I = LASTLINE (V[K]);
      }
    }
  }
}

WHERE:
V       = VETOR PARA ARMAZENAR AS SOMAS
POS     = POSIÇÃO ATUAL DO VETOR V
T       = VETOR DA TABELA (TABLE)
I       = POSIÇÃO DA TABELA DE ENTRADA
K       = POSIÇÃO DO VETOR V QUE ESTÁ SENDO USADA PARA SOMA
MAXPOS  = QUANTIDADE MÁXIMA DE POSIÇÕES (2^MAXLINE - 1)
MAXLINE = C * B (DE KEY.H) / QUANTIDADE DE LETRAS * NÚMERO DE BITS
SUM     = FUNÇÃO PARA SOMAR DOIS VALORES FORNECIDOS, ALÉM DO FATO DE INSERIR O INDICE DO SEGUNDO A CERTA PARTE DO PRIMEIRO
FIRSTLINE = FUNÇÃO PARA RETIRAR O ÍNDICE DA PRIMEIRA LINHA INSERIDA
LASTLINE  = FUNÇÃO PARA RETIRAR O ÍNDÍCE DA ÚLTIMA LINHA INSERIDA
